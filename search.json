[{"title":"How to use hexo","url":"/2024/06/07/How-to-use-hexo/","content":"<h1>Create folder</h1>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">md mybolg \\</span><br><span class=\"line\">&amp; <span class=\"built_in\">cd</span> mybolg</span><br></pre></td></tr></table></figure>\n<h1>Install hexo</h1>\n<p><code>npm i -g hexo-cli</code></p>\n<h1>Init hexo</h1>\n<p><code>hexo init</code></p>\n<h1>Edit config</h1>\n<ol>\n<li>Add <code>~/.ssh/id_rsa.pub</code> in GitHub</li>\n<li>Edit <code>_config.yml</code></li>\n</ol>\n<h2 id=\"Deploy-to-github\">Deploy to github</h2>\n<ol>\n<li>Find the code <figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>Modify the code <figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">git@github.com:nianwu/nianwu.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Config-Chinese\">Config Chinese</h2>\n<ol>\n<li>Find the code <figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>Modify the code <figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-CN</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1>Create post</h1>\n<p><code>hexo new post 'How to use hexo'.</code></p>\n<h1>Edit post</h1>\n<p>Edit <code>source/_posts/How-to-use-hexo.md</code></p>\n<h1>Preview</h1>\n<ul>\n<li>Run <code>hexo s</code></li>\n<li>Confirm zhe website.</li>\n</ul>\n<h1>Deploy post</h1>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean \\</span><br><span class=\"line\">&amp; hexo generate \\</span><br><span class=\"line\">&amp; hexo deploy</span><br></pre></td></tr></table></figure>\n<h1>Open website</h1>\n<p>Open the <a href=\"https://nianwu.github.io\">website</a></p>\n<h1>easy use</h1>\n<h2 id=\"调用当前目录下命令不加\">调用当前目录下命令不加 ./</h2>\n<ul>\n<li>将  ~/.zshrc 中增加 <code>export PATH=$PATH:`pwd`</code></li>\n</ul>\n<blockquote>\n<p>参考 <a href=\"./%E9%9A%8F%E6%89%8B%E8%AE%B0.md#linux-%E8%BF%90%E8%A1%8C%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E4%B8%8B%E5%91%BD%E4%BB%A4%E4%B8%8D%E5%8A%A0\">linux-运行当前目录下命令不加</a></p>\n</blockquote>\n<h2 id=\"创建-new-命令\">创建 new 命令</h2>\n<h3 id=\"脚本说明\"><strong>脚本说明</strong></h3>\n<p>这个脚本的作用是：</p>\n<ol>\n<li><strong>创建 Hexo 文章</strong>：根据用户提供的标题生成一篇新的 Hexo 文章。</li>\n<li><strong>确保 Hexo 环境已准备好</strong>：\n<ul>\n<li>检查 <code>hexo</code> 是否已安装，若没有安装则退出并提示用户安装。</li>\n<li>检查是否运行过 <code>npm install</code>，若没有则自动运行 <code>npm install</code> 以安装所需的依赖。</li>\n</ul>\n</li>\n<li><strong>打开文章文件</strong>：\n<ul>\n<li>如果系统中已安装 <code>VSCode</code>（<code>code</code> 命令可用），则在 VS Code 中打开新生成的文章文件。</li>\n<li>如果未安装 <code>VSCode</code>，则输出文章的路径，并提示用户安装 VS Code。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"功能流程\"><strong>功能流程</strong></h3>\n<ol>\n<li><strong>检查 Hexo 是否安装</strong>：使用 <code>command -v hexo</code> 检查系统是否存在 <code>hexo</code> 命令，如果没有，则输出错误信息并退出。</li>\n<li><strong>检查 <code>node_modules</code> 目录</strong>：如果没有 <code>node_modules</code> 目录（即未运行过 <code>npm install</code>），则提示用户并自动执行 <code>npm install</code> 安装依赖。</li>\n<li><strong>创建新文章</strong>：使用 <code>hexo new post &quot;$1&quot;</code> 创建一篇新文章。<code>$1</code> 为脚本的第一个参数，代表文章的标题。</li>\n<li><strong>输出文章路径</strong>：获取创建文章的路径，并检查路径是否成功返回。如果成功，接下来的步骤将检查是否能打开文件。</li>\n<li><strong>打开文件</strong>：首先检查 <code>VSCode</code>（即 <code>code</code> 命令）是否可用：\n<ul>\n<li>如果可以，使用 <code>code</code> 打开新文章。</li>\n<li>如果不可用，输出文章路径，并提示用户安装 VSCode。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"使用方法\"><strong>使用方法</strong></h3>\n<ol>\n<li>\n<p><strong>创建文章并自动打开</strong>：<br>\n执行脚本时传入文章标题：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">./create_hexo_post.sh <span class=\"string\">&quot;我的新文章&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>脚本输出示例</strong>：</p>\n<ul>\n<li>如果 <code>hexo</code> 或 <code>VSCode</code> 未安装，脚本将输出相应的错误提示。</li>\n<li>如果文章创建成功且 <code>VSCode</code> 可用，则自动打开新创建的文章。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"注意事项\"><strong>注意事项</strong></h3>\n<ul>\n<li>\n<p>确保你已经安装了 <code>Node.js</code> 和 <code>npm</code>，并且 Hexo 已经通过 <code>npm install -g hexo-cli</code> 安装到全局环境。</p>\n</li>\n<li>\n<p>脚本假设当前目录已经是 Hexo 项目的根目录。</p>\n</li>\n<li>\n<p>将以下代码写入 <code>new</code> 文件中</p>\n</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查 hexo 是否存在</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ! <span class=\"built_in\">command</span> -v hexo &amp;&gt; /dev/null; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;错误：没有安装 Hexo，请先安装 Hexo。&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查是否已安装 node_modules（即是否已运行 npm install）</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ ! -d <span class=\"string\">&quot;node_modules&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;警告：未找到 node_modules，正在运行 &#x27;npm install&#x27;...&quot;</span></span><br><span class=\"line\">    npm install</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成文章并获取文件路径</span></span><br><span class=\"line\">post_path=$(hexo new post <span class=\"string\">&quot;<span class=\"variable\">$1</span>&quot;</span> | grep <span class=\"string\">&quot;Created&quot;</span> | <span class=\"built_in\">cut</span> -d<span class=\"string\">&#x27; &#x27;</span> -f4-)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查是否成功生成文章</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -z <span class=\"string\">&quot;<span class=\"variable\">$post_path</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;错误：创建新文章失败。&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果 code 命令存在，打开 VS Code；否则输出提示并提供文件路径</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">command</span> -v code &amp;&gt; /dev/null; <span class=\"keyword\">then</span></span><br><span class=\"line\">    home=$(<span class=\"built_in\">echo</span> <span class=\"variable\">$HOME</span> | sed <span class=\"string\">&#x27;s/\\//\\\\\\//&#x27;</span>)</span><br><span class=\"line\">    code $(<span class=\"built_in\">echo</span> <span class=\"variable\">$post_path</span> | sed <span class=\"string\">&#x27;s/~/&#x27;</span><span class=\"string\">&quot;<span class=\"variable\">$home</span>&quot;</span><span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;没有安装 VSCode，请安装 VSCode。&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;文章已生成，文件路径：<span class=\"variable\">$post_path</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"创建-deploy-命令\">创建 deploy 命令</h2>\n<ul>\n<li>将以下代码写入 <code>deploy</code> 文件中</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/usr/bin/zsh</span></span><br><span class=\"line\"></span><br><span class=\"line\">git add . &amp;&amp; git commit -m <span class=\"string\">&#x27;更新&#x27;</span> &amp;&amp; git push</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检测本地git状态</span></span><br><span class=\"line\">local_git_status=$(git status --porcelain)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检测本地git是否与远端git一致</span></span><br><span class=\"line\">remote_git_status=$(git ls-remote --exit-code origin HEAD)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? -ne 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;本地git与远端git不一致，无法继续执行脚本&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果本地git状态不为空</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -n <span class=\"string\">&quot;<span class=\"variable\">$local_git_status</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;本地git状态不为空，无法继续执行脚本&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果所有检查都通过，可以继续执行脚本</span></span><br><span class=\"line\"><span class=\"comment\"># echo &quot;所有检查通过，脚本可以继续执行&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">hexo clean \\</span><br><span class=\"line\">&amp;&amp; hexo generate \\</span><br><span class=\"line\">&amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>\n<h2 id=\"赋予执行权限\">赋予执行权限</h2>\n<p><code>chmod +x dev &amp;&amp; chmod +x deploy</code></p>\n","tags":["hexo"]},{"title":"Hello World","url":"/2025/02/17/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\">Quick Start</h2>\n<h3 id=\"Create-a-new-post\">Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\">Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\">Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\">Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"hexo next 增加搜索功能","url":"/2024/06/07/hexo-next-%E5%A2%9E%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/","content":"<h1>安装搜索插件</h1>\n<p><code>npm install hexo-generator-searchdb --save</code></p>\n<h1>修改配置</h1>\n<h2 id=\"config-yml\">_config.yml</h2>\n<ul>\n<li>\n<p>增加如下代码</p>\n  <figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">search.json</span></span><br><span class=\"line\">  <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">  <span class=\"attr\">format:</span> <span class=\"string\">html</span></span><br><span class=\"line\">  <span class=\"attr\">limit:</span> <span class=\"number\">1000</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"themes-next-config-yml\">themes/next/_config.yml</h2>\n<ul>\n<li>\n<p>找到如下代码</p>\n  <figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">local_search:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>替换为如下代码</p>\n  <figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">local_search:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","tags":["hexo","next","搜索功能"]},{"title":"hexo next 增加标签页","url":"/2024/06/07/hexo-next-%E5%A2%9E%E5%8A%A0%E6%A0%87%E7%AD%BE%E9%A1%B5/","content":"<h1>修改 <code>themes/next/_config.yml</code> 以启用标签页选项</h1>\n<figure class=\"highlight diff\"><table><tr><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || fa fa-home</span><br><span class=\"line\">    #about: /about/ || fa fa-user</span><br><span class=\"line\"><span class=\"deletion\">-   #tags: /tags/ || fa fa-tags</span></span><br><span class=\"line\"><span class=\"addition\">+   tags: /tags/ || fa fa-tags</span></span><br></pre></td></tr></table></figure>\n<h1>增加标签页</h1>\n<ol>\n<li>\n<p><code>hexo new page tags</code></p>\n</li>\n<li>\n<p>修改 <code>source/tags/index.md</code> 文件</p>\n <figure class=\"highlight diff\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">---</span></span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2024-06-07 01:55:57</span><br><span class=\"line\"><span class=\"addition\">+type: tags</span></span><br><span class=\"line\"><span class=\"comment\">---</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","tags":["hexo","next","标签页"]},{"title":"hexo next 评论功能","url":"/2024/06/07/hexo-next-%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/","content":"<h1>评论功能</h1>\n<h2 id=\"修改-themes-next-config-yml-文件\">修改 <code>themes/next/_config.yml</code> 文件</h2>\n<figure class=\"highlight diff\"><table><tr><td class=\"code\"><pre><span class=\"line\">gitalk:</span><br><span class=\"line\"><span class=\"deletion\">- enable: false</span></span><br><span class=\"line\"><span class=\"deletion\">- github_id: # GitHub repo owner</span></span><br><span class=\"line\"><span class=\"deletion\">- repo: # Repository name to store issues</span></span><br><span class=\"line\"><span class=\"deletion\">- client_id: # GitHub Application Client ID</span></span><br><span class=\"line\"><span class=\"deletion\">- client_secret: # GitHub Application Client Secret</span></span><br><span class=\"line\"><span class=\"deletion\">- admin_user: # GitHub repo owner and collaborators, only these guys can initialize gitHub issues</span></span><br><span class=\"line\"><span class=\"deletion\">- distraction_free_mode: true # Facebook-like distraction free mode</span></span><br><span class=\"line\"><span class=\"deletion\">- # Gitalk&#x27;s display language depends on user&#x27;s browser or system environment</span></span><br><span class=\"line\"><span class=\"deletion\">- # If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class=\"line\"><span class=\"deletion\">- # Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span></span><br><span class=\"line\"><span class=\"deletion\">- language:</span></span><br><span class=\"line\"><span class=\"addition\">+ enable: true</span></span><br><span class=\"line\"><span class=\"addition\">+ github_id: nianwu # GitHub repo owner</span></span><br><span class=\"line\"><span class=\"addition\">+ repo: golb-gitalk # Repository name to store issues</span></span><br><span class=\"line\"><span class=\"addition\">+ client_id: xxxxxxxxx # GitHub Application Client ID</span></span><br><span class=\"line\"><span class=\"addition\">+ client_secret: xxxxxxxxxxxxxxxxxxxxxx # GitHub Application Client Secret</span></span><br><span class=\"line\"><span class=\"addition\">+ admin_user: nianwu # GitHub repo owner and collaborators, only these guys can initialize gitHub issues</span></span><br><span class=\"line\"><span class=\"addition\">+ distraction_free_mode: true # Facebook-like distraction free mode</span></span><br><span class=\"line\"><span class=\"addition\">+ # When the official proxy is not available, you can change it to your own proxy address</span></span><br><span class=\"line\"><span class=\"addition\">+ # proxy: https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token # This is official proxy adress</span></span><br><span class=\"line\"><span class=\"addition\">+ # Gitalk&#x27;s display language depends on user&#x27;s browser or system environment</span></span><br><span class=\"line\"><span class=\"addition\">+ # If you want everyone visiting your site to see a uniform language, you can set a force language value</span></span><br><span class=\"line\"><span class=\"addition\">+ # Available values: en | es-ES | fr | ru | zh-CN | zh-TW</span></span><br><span class=\"line\"><span class=\"addition\">+ language: zh-CN</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>ps: 其中的 proxy 选项是为了让国内能够使用评论功能, 但是此项目部署在 github, 所以能够看到博客的人不会需要代理, 故而此选项注释</p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://hexo-next.readthedocs.io/zh-cn/latest/next/advanced/%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1/\">参考文档</a></p>\n</blockquote>\n","tags":["hexo","next","评论功能"]},{"title":"moment 配置","url":"/2025/02/09/moment-%E9%85%8D%E7%BD%AE/","content":"<h1>参考文档</h1>\n<ul>\n<li><a href=\"https://momentjs.cn/docs/\">参考文档</a></li>\n</ul>\n<h1>基本配置</h1>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;moment/dist/locale/zh-cn&#x27;</span></span><br><span class=\"line\">moment.<span class=\"title function_\">locale</span>(<span class=\"string\">&#x27;zh-cn&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"property\">config</span>.<span class=\"property\">globalProperties</span>.<span class=\"property\">$moment</span> = moment</span><br><span class=\"line\">moment.<span class=\"property\">defaultFormat</span> = <span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span></span><br></pre></td></tr></table></figure>\n<h1>特殊序列化</h1>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> hours = <span class=\"title function_\">moment</span>(dt).<span class=\"title function_\">hours</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 判断时间段（早、中、晚）</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> timePeriod = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (hours &lt; <span class=\"number\">12</span>) &#123;</span><br><span class=\"line\">  timePeriod = <span class=\"string\">&#x27;早&#x27;</span> <span class=\"comment\">// 0:00 ~ 11:59 为早</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (hours &lt; <span class=\"number\">14</span>) &#123;</span><br><span class=\"line\">  timePeriod = <span class=\"string\">&#x27;中午&#x27;</span> <span class=\"comment\">// 12:00 ~ 13:59 为中午</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (hours &lt; <span class=\"number\">18</span>) &#123;</span><br><span class=\"line\">  timePeriod = <span class=\"string\">&#x27;下午&#x27;</span> <span class=\"comment\">// 14:00 ~ 17:59 为下午</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  timePeriod = <span class=\"string\">&#x27;晚&#x27;</span> <span class=\"comment\">// 18:00 ~ 23:59 为晚</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 格式化日期为 &quot;MM月DD日早/中午/下午/晚：HH:mm&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"title function_\">moment</span>(dt).<span class=\"title function_\">format</span>(<span class=\"string\">`MM月DD日<span class=\"subst\">$&#123;timePeriod&#125;</span>：HH:mm`</span>)</span><br></pre></td></tr></table></figure>\n"},{"title":"Node.js 视频下载工具开发总结","url":"/2025/05/17/nodejs-%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD/","content":"<h1>速览</h1>\n<ul>\n<li>\n<p>项目地址：<a href=\"https://gitee.com/nianwu/yll_linag_shi_ke_tang/tree/dev/tools\">mai_ke/tools</a></p>\n</li>\n<li>\n<p>核心依赖：<code>npm i esbuild pkg</code></p>\n<blockquote>\n<ul>\n<li><code>esbuild</code>：将源码及依赖打包成单一 JS 文件</li>\n<li><code>pkg</code>：将 JS 文件打包为可执行程序（如 <code>.exe</code>）</li>\n</ul>\n</blockquote>\n</li>\n<li>\n<p><code>package.json</code> 脚本配置：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;node src/index.js&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;build&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;esbuild src/index.js --bundle --platform=node --outfile=dist/app.js &amp;&amp; pkg dist/app.js --targets node16-win-x64 --output dist/app.exe &amp;&amp; echo dist/app.exe&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h1>技术要点拆解</h1>\n<h2 id=\"一、打包策略\">一、打包策略</h2>\n<ul>\n<li>使用 <code>pkg</code> 将 Node.js 项目打包为 Windows 可执行程序；</li>\n<li>对于 <code>import</code> 语法支持有限，推荐先用 <code>esbuild</code> 打包成单一 CommonJS 文件；</li>\n<li><code>pkg</code> 无法打包动态 <code>require()</code>，必须预处理；</li>\n<li>示例命令：<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">pkg src/index.js -t node16-win-x64 -o dist/app.exe</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"二、ES6-模块兼容处理\">二、ES6 模块兼容处理</h2>\n<ul>\n<li>\n<p>Webpack 配置复杂，未采用；</p>\n</li>\n<li>\n<p>使用 <code>esbuild</code> 简单快速，推荐用法：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">esbuild src/index.js --bundle --platform=node --outfile=dist/app.js</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>--bundle</code>：将依赖打入同一文件；</li>\n<li><code>--platform=node</code>：打包为 Node 环境可执行；</li>\n<li><code>--outfile</code>：输出文件路径。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1>三、视频下载与进度条展示</h1>\n<p>文件下载核心逻辑位于 <code>utils/download_file</code>：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">download_file</span>(<span class=\"params\">url, output_path</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (process.<span class=\"property\">platform</span> === <span class=\"string\">&#x27;win32&#x27;</span>) &#123;</span><br><span class=\"line\">      output_path = output_path.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\//g</span>, <span class=\"string\">&#x27;\\\\&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fs.<span class=\"title function_\">access</span>(output_path)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`文件已存在，跳过下载: <span class=\"subst\">$&#123;output_path&#125;</span>`</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 文件不存在，继续下载</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> outputDir = path.<span class=\"title function_\">dirname</span>(output_path)</span><br><span class=\"line\">  <span class=\"keyword\">await</span> fs.<span class=\"property\">promises</span>.<span class=\"title function_\">mkdir</span>(outputDir, &#123; <span class=\"attr\">recursive</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`正在下载: &quot;<span class=\"subst\">$&#123;output_path&#125;</span>&quot;，按 Ctrl+C 可中断`</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; data, headers &#125; = <span class=\"keyword\">await</span> <span class=\"title function_\">axios</span>(&#123;</span><br><span class=\"line\">    url,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;GET&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">responseType</span>: <span class=\"string\">&#x27;stream&#x27;</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> totalLength = <span class=\"built_in\">parseInt</span>(headers[<span class=\"string\">&#x27;content-length&#x27;</span>], <span class=\"number\">10</span>)</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`文件大小: <span class=\"subst\">$&#123;(totalLength / <span class=\"number\">1024</span> / <span class=\"number\">1024</span>).toFixed(<span class=\"number\">2</span>)&#125;</span> MB`</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> progressBar = <span class=\"keyword\">new</span> <span class=\"title class_\">ProgressBar</span>(<span class=\"string\">&#x27;下载进度 [:bar] :percent :etas&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"number\">40</span>,</span><br><span class=\"line\">    <span class=\"attr\">complete</span>: <span class=\"string\">&#x27;=&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">incomplete</span>: <span class=\"string\">&#x27; &#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">total</span>: totalLength</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> writer = <span class=\"title function_\">createWriteStream</span>(output_path)</span><br><span class=\"line\">  data.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;data&#x27;</span>, <span class=\"function\"><span class=\"params\">chunk</span> =&gt;</span> progressBar.<span class=\"title function_\">tick</span>(chunk.<span class=\"property\">length</span>))</span><br><span class=\"line\">  data.<span class=\"title function_\">pipe</span>(writer)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    writer.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;finish&#x27;</span>, resolve)</span><br><span class=\"line\">    writer.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;error&#x27;</span>, reject)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"四、Axios-配置-query-参数\">四、Axios 配置 query 参数</h2>\n<p>通过拦截器自动将 <code>query</code> 字段序列化并拼接到 URL 上：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">axios.<span class=\"property\">interceptors</span>.<span class=\"property\">request</span>.<span class=\"title function_\">use</span>(</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">config</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (config.<span class=\"property\">query</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> params = <span class=\"keyword\">new</span> <span class=\"title class_\">URLSearchParams</span>(config.<span class=\"property\">query</span>).<span class=\"title function_\">toString</span>()</span><br><span class=\"line\">      config.<span class=\"property\">url</span> += (config.<span class=\"property\">url</span>.<span class=\"title function_\">includes</span>(<span class=\"string\">&#x27;?&#x27;</span>) ? <span class=\"string\">&#x27;&amp;&#x27;</span> : <span class=\"string\">&#x27;?&#x27;</span>) + params</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> config</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"五、文件名合法化处理\">五、文件名合法化处理</h2>\n<p>防止文件名中包含非法字符导致保存失败：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">format_file_name</span>(<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> invalidChars = <span class=\"regexp\">/[&lt;&gt;:&quot;/\\\\|?*\\x00-\\x1F]/g</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> name.<span class=\"title function_\">replace</span>(invalidChars, <span class=\"string\">&#x27;_&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"六、数据展示与调试\">六、数据展示与调试</h2>\n<p>通过子进程方式将数据输出至 VS Code 编辑器中：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">open_vscode_with_data</span> = (<span class=\"params\">data</span>) =&gt; &#123;</span><br><span class=\"line\">  data = <span class=\"title function_\">try_parse_json</span>(data)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> data !== <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">    data = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(data, <span class=\"literal\">null</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> child = <span class=\"title function_\">spawn</span>(<span class=\"string\">&#x27;code&#x27;</span>, [<span class=\"string\">&#x27;-&#x27;</span>], &#123;</span><br><span class=\"line\">    <span class=\"attr\">stdio</span>: [<span class=\"string\">&#x27;pipe&#x27;</span>, <span class=\"string\">&#x27;inherit&#x27;</span>, <span class=\"string\">&#x27;inherit&#x27;</span>]</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  child.<span class=\"property\">stdin</span>.<span class=\"title function_\">write</span>(data)</span><br><span class=\"line\">  child.<span class=\"property\">stdin</span>.<span class=\"title function_\">end</span>()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h1>后续功能展望</h1>\n<h2 id=\"✅-数据展示优化\">✅ 数据展示优化</h2>\n<ul>\n<li>根据内容长度自动切换输出方式（控制台或编辑器）；</li>\n<li>自动检测系统中是否安装 VS Code / Vim / Sublime，并优先选择可用编辑器；</li>\n</ul>\n<h2 id=\"✅-下载逻辑增强\">✅ 下载逻辑增强</h2>\n<ul>\n<li>支持并发下载；</li>\n<li>添加下载重试、断点续传机制；</li>\n<li>UI 层支持总进度条 + 单任务进度条；</li>\n</ul>\n<hr>\n<p>如有建议或使用问题，欢迎留言交流！</p>\n","tags":["nodejs","视频下载","进度条展示","打包","es6语法兼容","axios优化","axios配置query参数","文件名合法化","数据展示"]},{"title":"vue 项目配置","url":"/2025/02/09/vue-%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE/","content":"<h1>vite.config.js</h1>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// https://vite.dev/config/</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">defineConfig</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"title function_\">vue</span>(),</span><br><span class=\"line\">    <span class=\"title function_\">vueDevTools</span>(),</span><br><span class=\"line\">    <span class=\"comment\">// 使用 ele plus 的自动导入</span></span><br><span class=\"line\">    <span class=\"title class_\">AutoImport</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">resolvers</span>: [<span class=\"title class_\">ElementPlusResolver</span>()]</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// 使用 ele plus 的自动导入</span></span><br><span class=\"line\">    <span class=\"title class_\">Components</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">resolvers</span>: [<span class=\"title class_\">ElementPlusResolver</span>()]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 在 import 中使用 @ 代替 src</span></span><br><span class=\"line\">    <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;@&#x27;</span>: <span class=\"title function_\">fileURLToPath</span>(<span class=\"keyword\">new</span> <span class=\"title function_\">URL</span>(<span class=\"string\">&#x27;./src&#x27;</span>, <span class=\"keyword\">import</span>.<span class=\"property\">meta</span>.<span class=\"property\">url</span>))</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 使 import @/button 的时候导入 @/button/index.vue</span></span><br><span class=\"line\">    <span class=\"attr\">extensions</span>: [<span class=\"string\">&#x27;.vue&#x27;</span>, <span class=\"string\">&#x27;.js&#x27;</span>, <span class=\"string\">&#x27;/index.js&#x27;</span>, <span class=\"string\">&#x27;/index.vue&#x27;</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 允许内网访问</span></span><br><span class=\"line\">  <span class=\"attr\">server</span>: &#123; <span class=\"attr\">host</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h1>jsconfig.json</h1>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;compilerOptions&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;remark&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;使vscode识别 import 中的 @&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;paths&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;@/*&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"string\">&quot;./src/*&quot;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;exclude&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"string\">&quot;node_modules&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"string\">&quot;dist&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"优雅的使用cdn","url":"/2024/09/22/%E4%BC%98%E9%9B%85%E7%9A%84%E4%BD%BF%E7%94%A8cdn/","content":"<h1>cdn 网站的选择</h1>\n<ul>\n<li>我习惯使用 <a href=\"https://unpkg.com/\">unpkg</a>, 因为其跟 npm 绑定, 软件包发布到 npm 上, 就可以使用该cdn</li>\n</ul>\n<h1>使用方式, 使用 moment 作为例子</h1>\n<ol>\n<li>在 <a href=\"https://www.npmjs.com/\">npm</a> 网站中搜索 moment</li>\n<li>点开 code 标签</li>\n<li>观察目录结构, 直接目录下没有 min.js 结尾文件, 但是有个 min 目录</li>\n<li>点开 min 目录, 发现 <code>locales.min.js</code> <code>moment-with-locales.min.js</code> <code>moment.min.js</code></li>\n<li>根据项目了解, 这三个文件分别对应 moment 本地化, moment 本体 + moment 本地化, moment 本体(不含本地化)</li>\n<li>依据习惯, 使用 <code>moment-with-locales.min.js</code></li>\n<li>手动拼接目录: <a href=\"https://unpkg.com/moment/min/moment-with-locales.min.js\">https://unpkg.com/moment/min/moment-with-locales.min.js</a> 并点击访问</li>\n<li>目录访问成功, 证明路径没有问题</li>\n<li>将路径组装为 js 标签: <code>&lt;script src=&quot;https://unpkg.com/moment/min/moment-with-locales.min.js&quot; /&gt;</code></li>\n<li>将 js 标签放到 h5 中</li>\n<li>在 h5 js 代码中使用: <code>console.log(moment)</code></li>\n</ol>\n<h1>例外情况</h1>\n<ol>\n<li>大部分情况下, 使用 cdn 导入的包会生成一个与包名相同的变量, 如 moment 包, 会生成 moment 变量, 直接在 h5 代码中调用即可</li>\n<li>然而少部分包, 由于使用量大, 其生成的变量名与包名不同, 而是使用一些符号, 例子如下:\n<ol>\n<li>lodash =&gt; _</li>\n<li>jquery =&gt; $</li>\n</ol>\n</li>\n</ol>\n<h1>如何寻找全局变量名, 以 lodash 为例</h1>\n<h2 id=\"查看源码\">查看源码</h2>\n<ol>\n<li>浏览器中搜索: <code>unpkg lodash</code>, 点击进入网页版\n<blockquote>\n<p>或者直接拼接链接进入网页版: <code>https://unpkg.com/browse/lodash@4.17.21/</code><br>\n最后一个 / 不能省略</p>\n</blockquote>\n</li>\n<li>依据经验, 搜索 <code>lodash.js</code>, 点开查看源码如下</li>\n</ol>\n<blockquote>\n<p>也可能叫其他的, 如 index.js, lodash.mjs 等<br>\n也可以直接查看 <code>lodash.min.js</code> , 因为代码压缩过, 可读性不好, 需要复制下来通过编辑器格式化后查看<br>\n不想下载也可以试试通过浏览器的请求预览, 看是否能够格式化代码</p>\n</blockquote>\n  <figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">;(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/** Detect free variable `global` from Node.js. */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> freeGlobal = <span class=\"keyword\">typeof</span> <span class=\"variable language_\">global</span> == <span class=\"string\">&#x27;object&#x27;</span> &amp;&amp; <span class=\"variable language_\">global</span> &amp;&amp; <span class=\"variable language_\">global</span>.<span class=\"property\">Object</span> === <span class=\"title class_\">Object</span> &amp;&amp; <span class=\"variable language_\">global</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/** Detect free variable `self`. */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> freeSelf = <span class=\"keyword\">typeof</span> self == <span class=\"string\">&#x27;object&#x27;</span> &amp;&amp; self &amp;&amp; self.<span class=\"property\">Object</span> === <span class=\"title class_\">Object</span> &amp;&amp; self;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/** Used as a reference to the global object. */</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> root = freeGlobal || freeSelf || <span class=\"title class_\">Function</span>(<span class=\"string\">&#x27;return this&#x27;</span>)();</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"comment\">// Export lodash.</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> _ = <span class=\"title function_\">runInContext</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Some AMD build optimizers, like r.js, check for condition patterns like:</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> define == <span class=\"string\">&#x27;function&#x27;</span> &amp;&amp; <span class=\"keyword\">typeof</span> define.<span class=\"property\">amd</span> == <span class=\"string\">&#x27;object&#x27;</span> &amp;&amp; define.<span class=\"property\">amd</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Expose Lodash on the global object to prevent errors when Lodash is</span></span><br><span class=\"line\">    <span class=\"comment\">// loaded by a script tag in the presence of an AMD loader.</span></span><br><span class=\"line\">    <span class=\"comment\">// See http://requirejs.org/docs/errors.html#mismatch for more details.</span></span><br><span class=\"line\">    <span class=\"comment\">// Use `_.noConflict` to remove Lodash from the global object.</span></span><br><span class=\"line\">    root.<span class=\"property\">_</span> = _;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Define as an anonymous module so, through path mapping, it can be</span></span><br><span class=\"line\">    <span class=\"comment\">// referenced as the &quot;underscore&quot; module.</span></span><br><span class=\"line\">    <span class=\"title function_\">define</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> _;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// Check for `exports` after `define` in case a build optimizer adds it.</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (freeModule) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Export for Node.js.</span></span><br><span class=\"line\">    (freeModule.<span class=\"property\">exports</span> = _).<span class=\"property\">_</span> = _;</span><br><span class=\"line\">    <span class=\"comment\">// Export for CommonJS support.</span></span><br><span class=\"line\">    freeExports.<span class=\"property\">_</span> = _;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Export to the global object.</span></span><br><span class=\"line\">    root.<span class=\"property\">_</span> = _;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>));</span><br></pre></td></tr></table></figure>\n<ol>\n<li>省略的都是定义方法的代码, 不会实际执行</li>\n<li>依据经验, global, self 等全局变量是 import 之前时代的 打包约定, 这里忽略即可</li>\n<li>所以 root 变量即为 this, 所以在 h5 中直接使用 _ 即可获得 lodash 对象, 并调用 debounce 等方法</li>\n</ol>\n","tags":["cdn","unpkg","npm"]},{"title":"使用Hexo主题","url":"/2024/06/07/%E4%BD%BF%E7%94%A8Hexo%E4%B8%BB%E9%A2%98/","content":"<h1>使用极简主题 &quot;next&quot;</h1>\n<h2 id=\"下载\">下载</h2>\n<ol>\n<li>进入 <code>mybolg</code> 文件夹</li>\n<li>使用命令下载主题<br>\n<code>git clone https://github.com/theme-next/hexo-theme-next themes/next</code></li>\n</ol>\n<h2 id=\"调整配置以使用-next-主题\">调整配置以使用 &quot;next&quot; 主题</h2>\n<ol>\n<li>\n<p>编辑 <code>_config.yml</code> 文件</p>\n</li>\n<li>\n<p>找到以下代码</p>\n <figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">***</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>ps: &quot;***&quot; 为默认主题名称</p>\n</blockquote>\n</li>\n<li>\n<p>修改为以下内容</p>\n <figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">next</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"重新生成\">重新生成</h2>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo clean \\</span><br><span class=\"line\">&amp;&amp; hexo generate \\</span><br><span class=\"line\">&amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>\n<h1>参考文档</h1>\n<ul>\n<li><a href=\"https://hexo-next.readthedocs.io/zh-cn/latest/next/base/%E9%A6%96%E9%A1%B5%E9%A2%84%E8%A7%88/\">next</a></li>\n</ul>\n","tags":["hexo","next"]},{"title":"修复博客中英文引号被替换为中文引号的问题","url":"/2024/06/07/%E4%BF%AE%E5%A4%8D%E5%8D%9A%E5%AE%A2%E4%B8%AD%E8%8B%B1%E6%96%87%E5%BC%95%E5%8F%B7%E8%A2%AB%E6%9B%BF%E6%8D%A2%E4%B8%BA%E4%B8%AD%E6%96%87%E5%BC%95%E5%8F%B7%E7%9A%84%E9%97%AE%E9%A2%98/","content":"<ol>\n<li>\n<p>修改渲染器</p>\n <figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm un hexo-renderer-marked --save \\</span><br><span class=\"line\">&amp;&amp; npm i hexo-renderer-markdown-it --save</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>修改配置</p>\n</li>\n</ol>\n<ul>\n<li>\n<p>在 <code>_config.yml</code> 中增加如下内容</p>\n  <figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\">  <span class=\"attr\">render:</span></span><br><span class=\"line\">    <span class=\"attr\">typographer:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","tags":["hexo","next","中文引号","英文引号","替换"]},{"title":"微信支付实战","url":"/2025/01/06/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%AE%9E%E6%88%98/","content":"<h1>背景知识</h1>\n<ul>\n<li>参考视频: <a href=\"https://www.bilibili.com/video/BV1864y1E7JX/?share_source=copy_web&amp;vd_source=109f1c93f287e9d72b3dd3a83e94ca49\">2024版！微信开放平台接入指南（OAuth2.0 登录 支付系统核心）实战教程</a></li>\n<li>微信支付需要oauth2.0</li>\n<li>公众号需要商业资质认证 300元/次</li>\n<li>需要申请\n<ul>\n<li><a href=\"https://open.weixin.qq.com\">微信登录</a> 服务</li>\n<li><a href=\"https://pay.weixin.qq.com\">微信支付</a> 服务</li>\n<li>网站应用</li>\n<li>服务号 用于绑定商户 和 绑定公众号 appid</li>\n</ul>\n</li>\n<li>需要在公众号的<strong>公众号设置</strong>&gt;<strong>申请微信认证</strong></li>\n<li>ngrok 免费 https 映射</li>\n</ul>\n<h1>探索</h1>\n<ul>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/wxcloudservice/wxcloudrun/src/scene/deploy/static_h5.html\">微信云托管</a></li>\n</ul>\n","tags":["微信支付"]},{"title":"快速编写一个 ele vue h5 页面","url":"/2024/09/21/%E5%BF%AB%E9%80%9F%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA-ele-vue-h5-%E9%A1%B5%E9%9D%A2/","content":"<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 引入样式 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://unpkg.com/element-ui/lib/theme-chalk/index.css&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 引入组件库 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/element-ui/lib/index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 引入axios --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- moment --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.30.1/moment-with-locales.min.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha512-4F1cxYdMiAW98oomSLaygEwmCnIP38pb4Kx70yQYqRwLVCs3DbRumfBq82T08g/4LJ/smbFGFpmeFlQgoDccgg==&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span> <span class=\"attr\">referrerpolicy</span>=<span class=\"string\">&quot;no-referrer&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123; message &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    moment.<span class=\"title function_\">locale</span>(<span class=\"string\">&#x27;zh-CN&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    moment.<span class=\"property\">defaultFormat</span> = <span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    moment.<span class=\"property\">fn</span>.<span class=\"property\">toJSON</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">format</span>()</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">/**</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">     * 格式化为字符串</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">     * <span class=\"doctag\">@returns</span> 序列化后的字符串, 如 1.2:3:4:55, 表示 1天 2小时 3分 4秒 550 毫秒</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"language-javascript\">     */</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    moment.<span class=\"property\">duration</span>.<span class=\"property\">fn</span>.<span class=\"property\">format</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">let</span> result = [</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">asDays</span>())</span></span><br><span class=\"line\"><span class=\"language-javascript\">        + <span class=\"string\">&#x27;.&#x27;</span> + <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">hours</span>()).<span class=\"title function_\">toString</span>().<span class=\"title function_\">padStart</span>(<span class=\"number\">2</span>, <span class=\"number\">0</span>),</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">minutes</span>()).<span class=\"title function_\">toString</span>().<span class=\"title function_\">padStart</span>(<span class=\"number\">2</span>, <span class=\"number\">0</span>),</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">seconds</span>()).<span class=\"title function_\">toString</span>().<span class=\"title function_\">padStart</span>(<span class=\"number\">2</span>, <span class=\"number\">0</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">        + <span class=\"string\">&#x27;.&#x27;</span> + <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">milliseconds</span>())</span></span><br><span class=\"line\"><span class=\"language-javascript\">      ].<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;:&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/0+$/</span>, <span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\.0*$/</span>, <span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^0\\./</span>, <span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^00:/</span>, <span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^00:/</span>, <span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^0+/</span>, <span class=\"string\">&#x27;&#x27;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">return</span> result</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    moment.<span class=\"property\">duration</span>.<span class=\"property\">fn</span>.<span class=\"property\">toString</span> = moment.<span class=\"property\">duration</span>.<span class=\"property\">fn</span>.<span class=\"property\">format</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">$console</span> = <span class=\"variable language_\">console</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">$moment</span> = moment</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">el</span>: <span class=\"string\">&#x27;#app&#x27;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"attr\">data</span>: &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Hello Vue!&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","tags":["剃刀哲学","快速"]},{"title":"搜狗输入法自定义短语","url":"/2025/02/21/%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9F%AD%E8%AF%AD/","content":"<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">;  搜狗输入法--自定义短语配置文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">;  自定义短语说明：</span></span><br><span class=\"line\"><span class=\"comment\">;  1、自定义短语支持多行、空格、指定位置。</span></span><br><span class=\"line\"><span class=\"comment\">;  2、每条自定义短语最多支持30000个汉字，总共支持100000条自定义短语。</span></span><br><span class=\"line\"><span class=\"comment\">;  3、自定义短语的格式如下：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">;  单行的格式：</span></span><br><span class=\"line\"><span class=\"comment\">;  字符串+英文逗号+数字（指定排序位置）=短语</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">;  多行的格式：</span></span><br><span class=\"line\"><span class=\"comment\">;  字符串+英文逗号+数字（指定排序位置）=</span></span><br><span class=\"line\"><span class=\"comment\">;  多行短语</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">;  具体格式可以参考下面的实例。</span></span><br><span class=\"line\"><span class=\"comment\">;  4、最多支持100000行自定义短语。</span></span><br><span class=\"line\"><span class=\"comment\">;  5、自定义短语的用途有：快捷输入手机号、邮箱、诗词、小短文等，大家可以自由发挥。</span></span><br><span class=\"line\"><span class=\"comment\">;  6、时间函数功能。具体定义格式如下：;  字符串+英文逗号+数字（指定排序位置）=#表达式</span></span><br><span class=\"line\"><span class=\"comment\">;  注意：表达式以英文#开头，后面的表达式中的每一个函数的前面都包含有英文$。</span></span><br><span class=\"line\"><span class=\"comment\">;  函数表如下：</span></span><br><span class=\"line\"><span class=\"comment\">;  函数    \t含义    \t举例</span></span><br><span class=\"line\"><span class=\"comment\">;  $year    \t年(4位) \t2006、2008</span></span><br><span class=\"line\"><span class=\"comment\">;  $year_yy\t年(2位) \t06、08</span></span><br><span class=\"line\"><span class=\"comment\">;  $month     \t月      \t12、8、3</span></span><br><span class=\"line\"><span class=\"comment\">;  $month_mm  \t月      \t12、08、03\t\t//此函数在输入法3.1版之后（含）有效</span></span><br><span class=\"line\"><span class=\"comment\">;  $day     \t日      \t3、13、22</span></span><br><span class=\"line\"><span class=\"comment\">;  $day_dd\t日\t       03、13、22\t//此函数在输入法3.1版之后（含）有效</span></span><br><span class=\"line\"><span class=\"comment\">;  $weekday \t星期    \t0、1、2、5、6</span></span><br><span class=\"line\"><span class=\"comment\">;  $fullhour\t时(24小时制)  \t2、8、13、23</span></span><br><span class=\"line\"><span class=\"comment\">;  $fullhour_hh\t时(24小时制)  \t02、08、13、23\t\t//此函数在输入法3.1版之后（含）有效</span></span><br><span class=\"line\"><span class=\"comment\">;  $halfhour\t时(12小时制)\t2、8、10、11</span></span><br><span class=\"line\"><span class=\"comment\">;  $halfhour_hh\t时(12小时制)\t02、08、10、11\t\t//此函数在输入法3.1版之后（含）有效</span></span><br><span class=\"line\"><span class=\"comment\">;  $ampm    \tAM、PM(英)\tAM、PM（大写）</span></span><br><span class=\"line\"><span class=\"comment\">;  $minute  \t分      \t02、08、15、28</span></span><br><span class=\"line\"><span class=\"comment\">;  $second  \t秒      \t02、08、15、28</span></span><br><span class=\"line\"><span class=\"comment\">;  $year_cn \t年(中文4位)\t二〇〇六</span></span><br><span class=\"line\"><span class=\"comment\">;  $year_yy_cn\t年(中文2位)\t〇六</span></span><br><span class=\"line\"><span class=\"comment\">;  $month_cn\t月(中文)\t十二、八、三</span></span><br><span class=\"line\"><span class=\"comment\">;  $day_cn  \t日(中文)\t三、十三、二十二</span></span><br><span class=\"line\"><span class=\"comment\">;  $weekday_cn \t星期(中文)\t日、一、二、五、六</span></span><br><span class=\"line\"><span class=\"comment\">;  $fullhour_cn\t时(中文24时制)\t二、八、十三、二十三</span></span><br><span class=\"line\"><span class=\"comment\">;  $halfhour_cn\t时(中文12时制)\t二、八、一、十一</span></span><br><span class=\"line\"><span class=\"comment\">;  $ampm_cn \t上午下午(中文)\t上午、下午</span></span><br><span class=\"line\"><span class=\"comment\">;  $minute_cn\t分(中文)\t零二、零八、十五、二十八</span></span><br><span class=\"line\"><span class=\"comment\">;  $second_cn\t秒(中文)\t零二、零八、十五、二十八</span></span><br><span class=\"line\"><span class=\"comment\">;  具体你可以参考这个文件最下面的例子，实际体验一下就明白了。</span></span><br><span class=\"line\"><span class=\"comment\">;  你可以用自定义短语来做一个带动态时间的多行回信落款。</span></span><br><span class=\"line\"><span class=\"comment\">;  ss,1=#$year年$month月$day_dd日 $fullhour:$minute:$second</span></span><br><span class=\"line\"></span><br><span class=\"line\">from,<span class=\"attr\">3</span>=from zhiyuan_yuan@qq.com at <span class=\"comment\">#$year-$month_mm-$day_dd $fullhour:$minute:$second </span></span><br><span class=\"line\">ts,3=<span class=\"comment\">#$year$month_mm$day_dd$fullhour$minute$second</span></span><br></pre></td></tr></table></figure>\n"},{"title":"随手记","url":"/2024/09/15/%E9%9A%8F%E6%89%8B%E8%AE%B0/","content":"<h1>todo</h1>\n<ul>\n<li>[ ] 使用 unpkg 创建你的代码包( 简单, 高效, 可使用 unpkg 快速引用)</li>\n<li>[ ] el-card 使用起来和 div 有些区别, 如 div 可以设置 max-height: 100%来限制高度, 但是元素放到 el-box 中就不可以使用了</li>\n<li>[ ] 用于方便快捷生成 vue 代码的网页</li>\n<li>[ ] 使用 docker 作为开发环境</li>\n</ul>\n<h1>js 写法中 .toString 和 + '' 的区别</h1>\n<ul>\n<li>\n<p>一些项目中会使用 + '' 来代替 .toString() 方法, 该写法在部分情况下会失效, 究其原因是因为 <code>+ ''</code> 本质上是运算符, 调用的 <code>valueOf</code> 方法, 又因为大部分对象的 valueOf 和 toString 运算结果一致, 所以没有问题, 但是使用复杂的值类型对象, 如 moment 的时候, 就会出现问题</p>\n</li>\n<li>\n<p>现象: 一些项目中会使用 <code>+ ''</code> 来代替 <code>.toString</code>, 因为第一种写法更简单</p>\n</li>\n<li>\n<p>隐患: <code>+ ''</code> 中的 <code>+</code> 是运算符, 调用的是 <code>valueOf</code>, 而非 <code>toString</code>, 当一个对象的 <code>valueOf</code> 和 <code>toString</code> 运行结果不一致的时候, 会出现错误</p>\n</li>\n<li>\n<p>举例:</p>\n</li>\n</ul>\n<h1>vue 常用配置</h1>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">$console</span> = <span class=\"variable language_\">console</span></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">$moment</span> = moment</span><br></pre></td></tr></table></figure>\n<h1>moment</h1>\n<h2 id=\"安装-moment\">安装 moment</h2>\n<ul>\n<li>moment 分为 moment, moment-timezone 两个包, 据我习惯, 一般将两个包全部安装</li>\n<li>npm 安装: <code>npm install moment moment-timezone --save -y  # npm</code></li>\n<li>cdn 引用:</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.30.1/moment-with-locales.min.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha512-4F1cxYdMiAW98oomSLaygEwmCnIP38pb4Kx70yQYqRwLVCs3DbRumfBq82T08g/4LJ/smbFGFpmeFlQgoDccgg==&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span> <span class=\"attr\">referrerpolicy</span>=<span class=\"string\">&quot;no-referrer&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://cdnjs.com/libraries/moment.js\">其他包</a></li>\n</ul>\n<h2 id=\"初始化\">初始化</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">moment.<span class=\"title function_\">locale</span>(<span class=\"string\">&#x27;zh-CN&#x27;</span>)</span><br><span class=\"line\">moment.<span class=\"property\">defaultFormat</span> = <span class=\"string\">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span></span><br><span class=\"line\">moment.<span class=\"property\">fn</span>.<span class=\"property\">toJSON</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">format</span>()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 格式化为字符串</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns</span> 序列化后的字符串, 如 1.2:3:4:55, 表示 1天 2小时 3分 4秒 550 毫秒</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">moment.<span class=\"property\">duration</span>.<span class=\"property\">fn</span>.<span class=\"property\">format</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = [</span><br><span class=\"line\">    <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">asDays</span>())</span><br><span class=\"line\">    + <span class=\"string\">&#x27;.&#x27;</span> + <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">hours</span>()).<span class=\"title function_\">toString</span>().<span class=\"title function_\">padStart</span>(<span class=\"number\">2</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">    <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">minutes</span>()).<span class=\"title function_\">toString</span>().<span class=\"title function_\">padStart</span>(<span class=\"number\">2</span>, <span class=\"number\">0</span>),</span><br><span class=\"line\">    <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">seconds</span>()).<span class=\"title function_\">toString</span>().<span class=\"title function_\">padStart</span>(<span class=\"number\">2</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">    + <span class=\"string\">&#x27;.&#x27;</span> + <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"variable language_\">this</span>.<span class=\"title function_\">milliseconds</span>())</span><br><span class=\"line\">  ].<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;:&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/0+$/</span>, <span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/\\.0*$/</span>, <span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^0\\./</span>, <span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^00:/</span>, <span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^00:/</span>, <span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^0+/</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">moment.<span class=\"property\">duration</span>.<span class=\"property\">fn</span>.<span class=\"property\">toString</span> = moment.<span class=\"property\">duration</span>.<span class=\"property\">fn</span>.<span class=\"property\">format</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// vue 中使用</span></span><br><span class=\"line\"><span class=\"comment\">// Vue.prototype.$moment = moment</span></span><br></pre></td></tr></table></figure>\n<h1>备份数据到sql</h1>\n<h2 id=\"安装\">安装</h2>\n<ul>\n<li><code>apt install my-client -y</code></li>\n</ul>\n<h2 id=\"备份\">备份</h2>\n<ul>\n<li><code>mysqldump --host=1.1.1.1 --user=test --password=test db tb1 tb2 &gt; db.sql</code>\n<blockquote>\n<p>将 1.1.1.1 服务器的 db 数据库 的 tb1, tb2 备份到 db.sql 文件, 账号密码分别为 test, test</p>\n</blockquote>\n</li>\n</ul>\n<h1>mycli</h1>\n<p>mycli 是一个命令, 用于在 linux 中连接mysql数据库并进行操作</p>\n<h2 id=\"基础命令\">基础命令</h2>\n<ol>\n<li>使用参数连接: <code>mycli -h 11.11.11.11 -P 3306 -u root -p password db_1</code></li>\n<li>使用连接字符串连接: <code>mycli mysql://root:password@11.11.11.11:3306/db_1</code></li>\n<li>执行指定文件: <code>mycli mysql://root:password@11.11.11.11:3306/db_1 &lt; path/to/script.sql</code></li>\n<li>执行指定文件并将日志记录到指定文件: <code>mycli mysql://root:password@11.11.11.11:3306/db_1 -o output.txt &lt; path/to/script.sql</code>\n<blockquote>\n<p>该命令并未测试是否有效</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"常用sql\">常用sql</h2>\n<blockquote>\n<p>该标题下所有sql都需要使用<a href=\"#%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4\">基础命令</a> 连接之后使用</p>\n</blockquote>\n<ol>\n<li>列出数据库: <code>show databases</code></li>\n<li>列出表: <code>show tables</code></li>\n<li>查看帮助: <code>help</code></li>\n</ol>\n<h1>linux-运行当前目录下命令不加./</h1>\n<ul>\n<li>将  ~/.zshrc 中增加 <code>export PATH=$PATH:`pwd`</code></li>\n</ul>\n<h1>hexo 中增加快速创建博客命令</h1>\n<ol>\n<li>创建 new 文件并填入如下内容<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/zsh</span></span><br><span class=\"line\">home=$(<span class=\"built_in\">echo</span> <span class=\"variable\">$HOME</span> | sed <span class=\"string\">&#x27;s/\\//\\\\\\//&#x27;</span>)</span><br><span class=\"line\">code $(hexo new post <span class=\"string\">&quot;<span class=\"variable\">$1</span>&quot;</span> | grep <span class=\"string\">&quot;Created&quot;</span> | <span class=\"built_in\">cut</span> -d<span class=\"string\">&#x27; &#x27;</span> -f4- | sed <span class=\"string\">&#x27;s/~/&#x27;</span><span class=\"string\">&quot;<span class=\"variable\">$home</span>&quot;</span><span class=\"string\">&#x27;/&#x27;</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li>运行 <code>chmod +x new</code> 赋予 new 执行权限</li>\n<li>参照 <a href=\"#linux-%E8%BF%90%E8%A1%8C%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95%E4%B8%8B%E5%91%BD%E4%BB%A4%E4%B8%8D%E5%8A%A0.md\">linux-运行当前目录下命令不加.md</a> 配置运行当前目录命令不加 <code>./</code></li>\n<li>在博客目录中可直接运行 <code>new 测试博客</code> 新建文章</li>\n</ol>\n<h1>git同步状态检测</h1>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/zsh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检测本地git状态</span></span><br><span class=\"line\">local_git_status=$(git status --porcelain)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检测本地git是否与远端git一致</span></span><br><span class=\"line\">remote_git_status=$(git ls-remote --exit-code origin HEAD)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? -ne 0 ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;本地git与远端git不一致，无法继续执行脚本&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果本地git状态不为空</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -n <span class=\"string\">&quot;<span class=\"variable\">$local_git_status</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;本地git状态不为空，无法继续执行脚本&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果所有检查都通过，可以继续执行脚本</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;所有检查通过，脚本可以继续执行&quot;</span></span><br></pre></td></tr></table></figure>\n<h1>git 中文乱码</h1>\n<p><code>git config --global core.quotepath false</code></p>\n","tags":["mycli"]}]